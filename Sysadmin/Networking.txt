Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2020-07-31T09:38:21-07:00

====== Networking ======
This is just a bunch of stuff that I have to look up constantly. I am working on organizing it. Some external [[+External Network Tools|NetTools]] can be found in that section

===== TCP Dump: =====
Basic tcpdump to host with port:
{{{code: lang="sh" linenumbers="True"
computer# tcpdump -i <interface OR any> host <host IP for src or dst> and port <port>

}}}

write to file with verbose output to a specific host:
{{{code: lang="sh" linenumbers="True"
computer# sudo tcpdump -vvv -n host 123.45.67.89 -w capture.cap

}}}

read cap file (you can also import this into wireshark):
{{{code: lang="sh" linenumbers="True"
computer# tcpdump -r capture.cap

}}}

I think this is looking for a specific time in a capture file (when you do this make sure to note that the timestamps i believe come from the machine where the capture happened) 12:30 specifically im not sure what the secondary grep was
{{{code: lang="sh" linenumbers="True"
computer# tcpdump -l -n -r capture2.cap ip |grep "^12:3" >12:3.txt
computer# grep "37\.43947" 12.3.txt >12.3.port43947.txt

}}}


The site I used to always use to look up commands has gone down (https://www.rationallyparanoid.com/articles/tcpdump.html) the wayback machine does have it (https://web.archive.org/web/20190213191324/https://www.rationallyparanoid.com/articles/tcpdump.html)
Here are a few commands that are helpful
Filtering by a port (or by excluding a port) and using either sorce or destination ports or a port range
{{{code: lang="sh" linenumbers="True"
tcpdump -i eth1 port not 22 and host 1.2.3.4
tcpdump src port 3306
tcpdump dst port 3306
tcpdump portrange 80-85
}}}

https traffic
{{{code: lang="sh" linenumbers="True"
tcpdump -nnSX port 443

}}}

Filter by source or destination
{{{code: lang="sh" linenumbers="True"
tcpdump src 1.1.1.1
tcpdump dst 1.0.0.1

}}}

Filter by network
{{{code: lang="sh" linenumbers="True"
tcpdump net 1.2.3.0/24

}}}

Hex output of packets (Hex output is useful when you want to see the content of the packets in question, and it’s often best used when you’re isolating a few candidates for closer scrutiny.)
{{{code: lang="sh" linenumbers="True"
tcpdump -c 1 -X icmp

}}}

Only show icmp traffic 
{{{code: lang="sh" linenumbers="True"
tcpdump icmp

}}}


https://danielmiessler.com/study/tcpdump/

===== SSLDump =====
ssldump lets you decrypt ssl traffic (https) so long as you have the keys
{{{code: lang="sh" linenumbers="True"
ssldump -k /path/to/key_file.key -i 'interface' -dnq 'expression'

}}}


===== Test network speeds: =====
iperf is a great program for this it will need to be installed on both a client machine and a server machine.
To start the server:
{{{code: lang="sh" linenumbers="True"
computer# iperf -s

}}}

To start the client:
{{{code: lang="sh" linenumbers="True"
computer# iperf -c ip.of.ser.ver

}}}


https://www.cyberciti.biz/faq/how-to-test-the-network-speedthroughput-between-two-linux-servers/

===== Wierd Interface things: =====
Interface **NOT** releasing IP Address:
{{{code: lang="sh" linenumbers="True"
computer# sudo ip addr flush interface-name && sudo systemctl restart networking

}}}

https://askubuntu.com/questions/333063/restart-network-interface-after-editing-etc-network-interfaces


--------------------

===== ipcalc =====
This is a tool for subnet calculations
ipcalc <ADDRESS1> - <ADDRESS2>  deaggregate address range

ipcalc <ADDRESS>/<NETMASK> --s a b c
							split network to subnets
							where a b c fits in.
Examples:
{{{code: lang="sh" linenumbers="True"
computer# ipcalc 192.168.0.1/24
computer# ipcalc 192.168.0.1/255.255.128.0
computer# ipcalc 192.168.0.1 255.255.128.0 255.255.192.0
computer# ipcalc 192.168.0.1 0.0.63.255

}}}



--------------------

===== Useful Tool for creating ACL's and BanLists =====
This site allows you to create ACL's and Banlists based on country which can be very useful. Warning, this creates MASSIVE lists as you are blocking entire countries.
https://www.countryipblocks.net/acl.php

--------------------

==== Useful Ping Notes: ====
Pretty ping is a useful package

Ping using specific interface
{{{code: lang="sh" linenumbers="True"
computer# ping -I eth0 google.com

}}}

Ping useing specified IP source
ping -S IP destination
{{{code: lang="sh" linenumbers="True"
computer# ping -S 10.0.0.5 google.com

}}}

https://www.cyberciti.biz/faq/ping-using-specific-gateway-interface-or-source-ip-address/

Usually I cap my ping count with a -C 5 with aliases.

--------------------

